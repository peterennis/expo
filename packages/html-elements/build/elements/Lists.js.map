{"version":3,"file":"Lists.js","sourceRoot":"","sources":["../../src/elements/Lists.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { PropsWithChildren, ComponentType, forwardRef } from 'react';\nimport { StyleSheet } from 'react-native';\nimport View, { ViewProps } from '../primitives/View';\nimport Text, { TextProps } from '../primitives/Text';\nimport { em } from '../css/units';\n\nexport const UL = forwardRef((props: PropsWithChildren<ViewProps>, ref) => {\n  const { children } = props;\n\n  const elements = React.Children.toArray(children).map(element => {\n    if (React.isValidElement(element)) return React.cloneElement(element, { bullet: '\\u00B7' });\n    return element;\n  });\n\n  return <View {...props} style={[styles.ul, props.style]} children={elements} ref={ref} />;\n}) as ComponentType<ViewProps>;\n\nexport const OL = forwardRef((props: PropsWithChildren<ViewProps>, ref) => {\n  const { children } = props;\n\n  const elements = React.Children.toArray(children).map((element, index) => {\n    if (React.isValidElement(element))\n      return React.cloneElement(element, { bullet: `${index + 1}.` });\n    return element;\n  });\n\n  return <View {...props} style={[styles.ol, props.style]} children={elements} ref={ref} />;\n}) as ComponentType<ViewProps>;\n\nfunction isTextProps(props: any): props is TextProps {\n  // Treat <li></li> as a Text element.\n  return typeof props.children === 'string';\n}\n\ntype LIProps = (TextProps | ViewProps) & { bullet?: string };\n\nexport const LI = forwardRef((props: PropsWithChildren<LIProps>, ref: any) => {\n  const { bullet, children } = props;\n\n  if (isTextProps(props)) {\n    return (\n      <Text {...props} style={props.style} ref={ref}>\n        {bullet} {children}\n      </Text>\n    );\n  }\n  return (\n    <View {...props} style={[styles.liWrapper, props.style]} ref={ref}>\n      <Text>{bullet}</Text>\n      {children}\n    </View>\n  );\n}) as ComponentType<LIProps>;\n\nconst styles = StyleSheet.create({\n  caption: {\n    textAlign: 'center',\n    fontSize: em(1) as number,\n  },\n  ul: {\n    paddingLeft: 20,\n  },\n  ol: {\n    paddingLeft: 20,\n  },\n  liWrapper: {\n    flexDirection: 'row',\n  },\n  th: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    flex: 1,\n    fontSize: em(1) as number,\n  },\n  tr: {\n    flexDirection: 'row',\n  },\n  td: {\n    flex: 1,\n    fontSize: em(1) as number,\n  },\n});\n"]}