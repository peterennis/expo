{"version":3,"file":"Battery.js","sourceRoot":"","sources":["../src/Battery.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAgB,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAEzE,OAAO,EAGL,YAAY,GAMb,MAAM,iBAAiB,CAAC;AACzB,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,MAAM,mBAAmB,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;AAM1D,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,OAAO,EAAE;IACnD,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,EAAE;QACtC,WAAW,EAAE;YACX,UAAU,EAAE,IAAI;YAChB,GAAG;gBACD,SAAS,CAAC,cAAc,EAAE,qBAAqB,EAAE;oBAC/C,WAAW,EAAE,0BAA0B;oBACvC,cAAc,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC,OAAO;oBAClD,eAAe,EAAE,OAAO;iBACzB,CAAC,CAAC;gBACH,OAAO,CAAC,WAAW,IAAI,WAAW,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC;YAC3D,CAAC;SACF;KACF,CAAC,CAAC;CACJ;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB;IACpC,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,CAAC;AAC5E,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,oBAAoB;IACxC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE;QACrC,OAAO,CAAC,CAAC,CAAC;KACX;IACD,OAAO,MAAM,WAAW,CAAC,oBAAoB,EAAE,CAAC;AAClD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,oBAAoB;IACxC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE;QACrC,OAAO,YAAY,CAAC,OAAO,CAAC;KAC7B;IACD,OAAO,MAAM,WAAW,CAAC,oBAAoB,EAAE,CAAC;AAClD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,0BAA0B;IAC9C,IAAI,CAAC,WAAW,CAAC,0BAA0B,EAAE;QAC3C,OAAO,KAAK,CAAC;KACd;IACD,OAAO,MAAM,WAAW,CAAC,0BAA0B,EAAE,CAAC;AACxD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kBAAkB;IACtC,MAAM,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QACnE,oBAAoB,EAAE;QACtB,oBAAoB,EAAE;QACtB,0BAA0B,EAAE;KAC7B,CAAC,CAAC;IACH,OAAO;QACL,YAAY;QACZ,YAAY;QACZ,YAAY;KACb,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAoC;IAC1E,OAAO,mBAAmB,CAAC,WAAW,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;AACjF,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAoC;IAC1E,OAAO,mBAAmB,CAAC,WAAW,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;AACjF,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAiC;IACvE,OAAO,mBAAmB,CAAC,WAAW,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;AAC9E,CAAC;AAED,OAAO,EAGL,YAAY,GAOb,CAAC","sourcesContent":["import { EventEmitter, Subscription, deprecate } from '@unimodules/core';\n\nimport {\n  BatteryLevelEvent,\n  BatteryLevelUpdateListener,\n  BatteryState,\n  BatteryStateEvent,\n  BatteryStateUpdateListener,\n  PowerModeEvent,\n  PowerModeUpdateListener,\n  PowerState,\n} from './Battery.types';\nimport ExpoBattery from './ExpoBattery';\n\nconst BatteryEventEmitter = new EventEmitter(ExpoBattery);\n\n/**\n * Deprecated\n */\nexport declare const isSupported: boolean;\nif (typeof module !== 'undefined' && module.exports) {\n  Object.defineProperties(module.exports, {\n    isSupported: {\n      enumerable: true,\n      get() {\n        deprecate('expo-battery', 'Battery.isSupported', {\n          replacement: 'Battery.isAvailableAsync',\n          currentVersion: require('../package.json').version,\n          versionToRemove: '3.0.0',\n        });\n        return (ExpoBattery && ExpoBattery.isSupported) || false;\n      },\n    },\n  });\n}\n\nexport async function isAvailableAsync(): Promise<boolean> {\n  return Promise.resolve((ExpoBattery && ExpoBattery.isSupported) || false);\n}\n\nexport async function getBatteryLevelAsync(): Promise<number> {\n  if (!ExpoBattery.getBatteryLevelAsync) {\n    return -1;\n  }\n  return await ExpoBattery.getBatteryLevelAsync();\n}\n\nexport async function getBatteryStateAsync(): Promise<BatteryState> {\n  if (!ExpoBattery.getBatteryStateAsync) {\n    return BatteryState.UNKNOWN;\n  }\n  return await ExpoBattery.getBatteryStateAsync();\n}\n\nexport async function isLowPowerModeEnabledAsync(): Promise<boolean> {\n  if (!ExpoBattery.isLowPowerModeEnabledAsync) {\n    return false;\n  }\n  return await ExpoBattery.isLowPowerModeEnabledAsync();\n}\n\nexport async function getPowerStateAsync(): Promise<PowerState> {\n  const [batteryLevel, batteryState, lowPowerMode] = await Promise.all([\n    getBatteryLevelAsync(),\n    getBatteryStateAsync(),\n    isLowPowerModeEnabledAsync(),\n  ]);\n  return {\n    batteryLevel,\n    batteryState,\n    lowPowerMode,\n  };\n}\n\nexport function addBatteryLevelListener(listener: BatteryLevelUpdateListener): Subscription {\n  return BatteryEventEmitter.addListener('Expo.batteryLevelDidChange', listener);\n}\n\nexport function addBatteryStateListener(listener: BatteryStateUpdateListener): Subscription {\n  return BatteryEventEmitter.addListener('Expo.batteryStateDidChange', listener);\n}\n\nexport function addLowPowerModeListener(listener: PowerModeUpdateListener): Subscription {\n  return BatteryEventEmitter.addListener('Expo.powerModeDidChange', listener);\n}\n\nexport {\n  BatteryLevelEvent,\n  BatteryLevelUpdateListener,\n  BatteryState,\n  BatteryStateEvent,\n  BatteryStateUpdateListener,\n  PowerModeEvent,\n  PowerModeUpdateListener,\n  PowerState,\n  Subscription,\n};\n"]}