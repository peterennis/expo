name: Expo client

on:
  push:
    paths:
    - !/apps/

jobs:
  build:

    runs-on: macOS-10.14

    steps:
    - name: Install Nix
      run: curl https://nixos.org/releases/nix/nix-2.1.2/install | bash -s -- --no-daemon
    - name: Source Nix from Bash
      run: echo ". ~/.nix-profile/etc/profile.d/nix.sh" >> ~/.bash_profile
    - name: Install common packages
      # direnv: configures environment with .envrc files                                        
      # findutils: where, find, etc. for expo-module test                                       
      # git: circleci checkout steps                                                            
      # gnugrep: used in .envrc                                                                 
      # gnutar: used by nix commands which download channels                                    
      # gzip: used by nix commands which download channels                                      
      # openssh: circleci checkout steps                                                        
      # rsync: expo-module-scripts uses to copy template files                                  
      # xz: circleci checkout steps                                                             
      run: |
        nix-env -iA \
          nixpkgs.direnv \
          nixpkgs.findutils \
          nixpkgs.git \
          nixpkgs.gnugrep \
          nixpkgs.gnutar \
          nixpkgs.gzip \
          nixpkgs.openssh \
          nixpkgs.rsync \
          nixpkgs.xz
        mkdir -p ~/.config/direnv
        echo -e "[whitelist]\nprefix = [ \"$HOME\" ]" > ~/.config/direnv/config.toml
        echo 'eval "$(direnv export bash)"' >> ~/.bash_profile
        echo '--frozen-lockfile true' >> ~/.yarnrc
    - uses: actions/checkout@v1
    - name: Pull LFS files
      run: git lfs pull
    - name: Fetch CocoaPods specs
      run: curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
    - name: Generate dynamic macros
      run: expotools ios-generate-dynamic-macros
    - name: Build iOS app for simulator
      run: nix run expo.procps --command fastlane ios create_simulator_build
      
