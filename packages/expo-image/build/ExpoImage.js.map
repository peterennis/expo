{"version":3,"file":"ExpoImage.js","sourceRoot":"","sources":["../src/ExpoImage.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAMzE,MAAM,eAAe,GAAG,sBAAsB,CAAuB,WAAW,CAAC,CAAC;AAElF,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,EAAc;IACvE,MAAM,cAAc,GAAG,KAAK,CAAC,kBAAkB,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;IAC9D,IAAI,aAAa,GAAG,KAAK,CAAC;IAE1B,iFAAiF;IACjF,sFAAsF;IACtF,0EAA0E;IAC1E,8EAA8E;IAC9E,6EAA6E;IAC7E,sDAAsD;IACtD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;QAClC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,cAAc,CAAC;QACzC,aAAa,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;KAChE;IAED,OAAO,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,EAAG,CAAC;AACtF,CAAC","sourcesContent":["import React from 'react';\nimport { Image, requireNativeComponent, StyleSheet } from 'react-native';\n\nimport { ImageProps } from './Image';\n\ntype NativeExpoImageProps = ImageProps;\n\nconst NativeExpoImage = requireNativeComponent<NativeExpoImageProps>('ExpoImage');\n\nexport default function ExpoImage({ source, style, ...props }: ImageProps) {\n  const resolvedSource = Image.resolveAssetSource(source ?? {});\n  let resolvedStyle = style;\n\n  // When possible, pass through the intrinsic size of the asset to the Yoga layout\n  // system. While this is also possible in native code, doing it here is more efficient\n  // as the yoga node gets initialized with the correct size from the start.\n  // In native code, there is a separation between the layout (shadow) nodes and\n  // actual views. Views that update the intrinsic content-size in Yoga trigger\n  // additional layout passes, which we want to prevent.\n  if (!Array.isArray(resolvedSource)) {\n    const { width, height } = resolvedSource;\n    resolvedStyle = StyleSheet.flatten([{ width, height }, style]);\n  }\n\n  return <NativeExpoImage {...props} source={resolvedSource} style={resolvedStyle} />;\n}\n"]}