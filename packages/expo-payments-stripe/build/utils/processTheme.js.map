{"version":3,"file":"processTheme.js","sourceRoot":"","sources":["../../src/utils/processTheme.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAQ5C,MAAM,CAAC,OAAO,UAAU,YAAY,CAAC,QAAe,EAAE;IACpD,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAiB,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC/D,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACvC,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;YAClC,OAAO,MAAM,CAAC;SACf;QACD,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC","sourcesContent":["import { processColor } from 'react-native';\n\nimport { Theme } from './types';\n\nexport type ProcessedTheme = {\n  [K in keyof Theme]?: number;\n};\n\nexport default function processTheme(theme: Theme = {}) {\n  return Object.keys(theme).reduce<ProcessedTheme>((result, key) => {\n    const value = theme[key];\n    if (key.toLowerCase().endsWith('color')) {\n      result[key] = processColor(value);\n      return result;\n    }\n    result[key] = value;\n    return result;\n  }, {});\n}\n"]}