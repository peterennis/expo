// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`doesn't conflict with Prettier: message 1`] = `
"No rules that are unnecessary or conflict with Prettier were found.
"
`;

exports[`doesn't conflict with Prettier: success 1`] = `true`;

exports[`lints with the default config: fixtures/all-00.js 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [],
  "warningCount": 0,
}
`;

exports[`lints with the default config: fixtures/all-01.ts 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [],
  "warningCount": 0,
}
`;

exports[`lints with the default config: fixtures/all-02.js 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [
    Object {
      "column": 5,
      "endColumn": 12,
      "endLine": 1,
      "line": 1,
      "message": "'unused1' is assigned a value but never used.",
      "nodeType": "Identifier",
      "ruleId": "@typescript-eslint/no-unused-vars",
      "severity": 1,
    },
    Object {
      "column": 10,
      "endColumn": 17,
      "endLine": 3,
      "line": 3,
      "message": "'unused2' is defined but never used.",
      "nodeType": "Identifier",
      "ruleId": "@typescript-eslint/no-unused-vars",
      "severity": 1,
    },
    Object {
      "column": 7,
      "endColumn": 14,
      "endLine": 4,
      "line": 4,
      "message": "'unused3' is assigned a value but never used.",
      "nodeType": "Identifier",
      "ruleId": "@typescript-eslint/no-unused-vars",
      "severity": 1,
    },
  ],
  "source": "let unused1 = 0;

function unused2() {
  let unused3 = 'hi';
}
",
  "warningCount": 3,
}
`;

exports[`lints with the default config: fixtures/all-03.ts 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [
    Object {
      "column": 5,
      "endColumn": 14,
      "endLine": 1,
      "line": 1,
      "message": "'tsUnused1' is assigned a value but never used.",
      "nodeType": "Identifier",
      "ruleId": "@typescript-eslint/no-unused-vars",
      "severity": 1,
    },
    Object {
      "column": 10,
      "endColumn": 19,
      "endLine": 3,
      "line": 3,
      "message": "'tsUnused2' is defined but never used.",
      "nodeType": "Identifier",
      "ruleId": "@typescript-eslint/no-unused-vars",
      "severity": 1,
    },
    Object {
      "column": 7,
      "endColumn": 13,
      "endLine": 5,
      "line": 5,
      "message": "'asCast' is assigned a value but never used.",
      "nodeType": "Identifier",
      "ruleId": "@typescript-eslint/no-unused-vars",
      "severity": 1,
    },
    Object {
      "column": 7,
      "endColumn": 23,
      "endLine": 6,
      "line": 6,
      "message": "'angleBracketCast' is assigned a value but never used.",
      "nodeType": "Identifier",
      "ruleId": "@typescript-eslint/no-unused-vars",
      "severity": 1,
    },
    Object {
      "column": 26,
      "endColumn": 35,
      "endLine": 6,
      "line": 6,
      "message": "Use 'as string' instead of '<string>'.",
      "messageId": "as",
      "nodeType": "TSTypeAssertion",
      "ruleId": "@typescript-eslint/consistent-type-assertions",
      "severity": 1,
    },
  ],
  "source": "let tsUnused1 = 0;

function tsUnused2() {
  let x: any = 'hi';
  let asCast = x as string;
  let angleBracketCast = <string>x;
}
",
  "warningCount": 5,
}
`;

exports[`lints with the default config: fixtures/all-04.ts 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [],
  "output": "export const blah = (): string[] => {
  return ['1'];
};
",
  "warningCount": 0,
}
`;

exports[`lints with the default config: fixtures/all-05.ts 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [
    Object {
      "column": 21,
      "endColumn": 23,
      "endLine": 1,
      "line": 1,
      "message": "Forbidden extra non-null assertion.",
      "messageId": "noExtraNonNullAssertion",
      "nodeType": "TSNonNullExpression",
      "ruleId": "@typescript-eslint/no-extra-non-null-assertion",
      "severity": 1,
    },
  ],
  "output": "export const blah = 3!!;
",
  "warningCount": 1,
}
`;

exports[`lints with the default config: fixtures/all-06.ts 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [],
  "output": "export const numberTest: number | null = null;
export const booleanTest: boolean | null = null;
export const symbolTest: symbol | null = null;
export const objectTest: object | null = null;
export const stringTest: string | null = null;
export const objectShorthandTest: object | null = null;
",
  "warningCount": 0,
}
`;

exports[`lints with the default config: fixtures/all-07.js 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [],
  "output": "import b from 'b';
import c from 'c';

import d from './d';

const a = require('a');
const e = require('e');

export default a + b + c + d + e;
",
  "warningCount": 0,
}
`;
