{"version":3,"file":"NotificationsEmitter.types.js","sourceRoot":"","sources":["../src/NotificationsEmitter.types.ts"],"names":[],"mappings":"","sourcesContent":["interface BaseNotificationTrigger {\n  type: string;\n  class: string;\n  repeats: boolean;\n}\n\ninterface PushNotificationTrigger extends BaseNotificationTrigger {\n  type: 'push';\n}\n\ninterface CalendarNotificationTrigger extends BaseNotificationTrigger {\n  type: 'calendar';\n  dateComponents: {\n    era?: number;\n    year?: number;\n    month?: number;\n    day?: number;\n    hour?: number;\n    minute?: number;\n    second?: number;\n    weekday?: number;\n    weekdayOrdinal?: number;\n    quarter?: number;\n    weekOfMonth?: number;\n    weekOfYear?: number;\n    yearForWeekOfYear?: number;\n    nanosecond?: number;\n    isLeapMonth: boolean;\n    timeZone?: string;\n    calendar?: string;\n  };\n}\n\ninterface Region {\n  type: string;\n  identifier: string;\n  notifyOnEntry: boolean;\n  notifyOnExit: boolean;\n}\n\ninterface CircularRegion extends Region {\n  type: 'circular';\n  radius: number;\n  center: {\n    latitude: number;\n    longitude: number;\n  };\n}\n\ninterface BeaconRegion extends Region {\n  type: 'beacon';\n  notifyEntryStateOnDisplay: boolean;\n  major: number | null;\n  minor: number | null;\n  uuid?: string;\n  beaconIdentityConstraint?: {\n    uuid: string;\n    major: number | null;\n    minor: number | null;\n  };\n}\n\ninterface LocationNotificationTrigger extends BaseNotificationTrigger {\n  type: 'location';\n  region: CircularRegion | BeaconRegion;\n}\n\ninterface TimeIntervalNotificationTrigger extends BaseNotificationTrigger {\n  type: 'timeInterval';\n  timeInterval: number;\n}\n\ntype NotificationTrigger =\n  | PushNotificationTrigger\n  | CalendarNotificationTrigger\n  | LocationNotificationTrigger\n  | TimeIntervalNotificationTrigger;\n\ninterface IosNotification {\n  request: {\n    identifier: string;\n    content: {\n      title: string | null;\n      subtitle: string | null;\n      body: string | null;\n      badge: number | null;\n      sound: string | null;\n      launchImageName: string;\n      userInfo: { [key: string]: unknown };\n      attachments: {\n        identifier: string | null;\n        url: string | null;\n        type: string | null;\n      }[];\n      summaryArgument: string;\n      summaryArgumentCount: number;\n      categoryIdentifier: string;\n      threadIdentifier: string;\n      targetContentIdentifier?: string;\n    };\n    trigger: NotificationTrigger;\n  };\n  date: number;\n}\n\ninterface AndroidNotification {\n  collapseKey: string | null;\n  data: { [key: string]: string };\n  from: string | null;\n  messageId: string | null;\n  messageType: string | null;\n  originalPriority: number;\n  priority: number;\n  sentTime: number;\n  to: string | null;\n  ttl: number;\n  notification: null | {\n    body: string | null;\n    bodyLocalizationArgs: string[] | null;\n    bodyLocalizationKey: string | null;\n    channelId: string | null;\n    clickAction: string | null;\n    color: string | null;\n    usesDefaultLightSettings: boolean;\n    usesDefaultSound: boolean;\n    usesDefaultVibrateSettings: boolean;\n    eventTime: number | null;\n    icon: string | null;\n    imageUrl: string | null;\n    lightSettings: number[] | null;\n    link: string | null;\n    localOnly: boolean;\n    notificationCount: number | null;\n    notificationPriority: number | null;\n    sound: string | null;\n    sticky: boolean;\n    tag: string | null;\n    ticker: string | null;\n    title: string | null;\n    titleLocalizationArgs: string[] | null;\n    titleLocalizationKey: string | null;\n    vibrateTimings: number[] | null;\n    visibility: number | null;\n  };\n}\n\nexport type Notification = IosNotification | AndroidNotification;\n\nexport interface NotificationResponse {\n  notification: Notification;\n  actionIdentifier: string;\n  userText?: string;\n}\n"]}